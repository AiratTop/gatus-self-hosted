services:
  gatus-psql:
    container_name: gatus-psql
    hostname: gatus-psql
    image: postgres:17
    networks: ['shared_network']
    restart: always
    environment:
      POSTGRES_DB: gatus
      POSTGRES_USER: gatus
      POSTGRES_PASSWORD: ${PSQL_PWD}
    volumes:
      - ./data/gatus-psql:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U gatus -d gatus']
      interval: 5s
      timeout: 5s
      retries: 10
  gatus:
    container_name: gatus
    hostname: gatus
    image: twinproduction/gatus:latest
    networks: ['shared_network']
    ports:
      - "8080:8080"
    restart: always
    environment:
      POSTGRES_HOST: gatus-psql
      POSTGRES_DB: gatus
      POSTGRES_USER: gatus
      POSTGRES_PASSWORD: ${PSQL_PWD}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      TELEGRAM_USER_ID: ${TELEGRAM_USER_ID}
      OIDC_CLIENT_ID: ${OIDC_CLIENT_ID}
      OIDC_CLIENT_SECRET: ${OIDC_CLIENT_SECRET}
    volumes:
      - ./config/config.yaml:/config/config.yaml:ro
      - ./data/gatus:/data
    depends_on:
      gatus-psql:
        condition: service_healthy
networks:
  shared_network:
    name: shared_network
    driver: bridge
    external: true